[{"content":"概要  【初心者向け】2時間でわかる！確実に商談を前進させる営業トーク50選  成果を出すための3つのポイント  Yes を急ぐより、「No を言わせない」  議題について、顧客と課題感を共有する  課題の必要性や対象者は？ 具体的にどのくらい必要？   課題感の共有後、自分の知識と掛け合わせ、ソリューションを想像   商品特性より、「判断基準を売り込む」  顧客の課題には、複数あっても大きさに差がある（課題？、予算？、モチベUP？） その課題に応じた判断基準をもって、商品を売り込む   スピーディな対応により、「顧客の熱を下げない」  連絡や対応のスピード（遅くても3日） 顧客は、方々から営業を受けるため、紹介した商品の説明も埋もれてしまう 担当者の力量も競合と比較されている    訪問前の動き  顧客に聞ける内容は聞いておく  事前の聴取がないと、複数の案がある場合、当日は一方的な話になってしまう ある程度、選択肢を絞らせることで、想定質問への深掘りもできる   社内ノウハウ  社内相談しておくことで、過去の対応実績から、新たな対応ができる可能性が高まる   訪問前に決めること  訪問の目的とゴールは明確であるか（相手の心に残したいこと） 目的とゴールに顧客にとって有益な情報があるか    課題の引き出し方  テーマの確認  冒頭に「相互に話したい議題を宣言」   課題の洗い出し  担当者と決裁者の課題を聞く（社内では？、管理者では？、あなたは？） 二人が語る課題が、大きな課題である可能性高い   課題の深掘り  課題は、「数値と人」に注目すると、見つけやすくなる 問題は誰に当てはまる？、具体的なシーンは？、どの程度の割合で当てはまる？   課題の焦点化  「重要度、緊急度」で課題を分類分けし、各課題に「絡まり」を持ち、重要性が高い課題を見つける   過去から現在までの取組、新たな課題を引き出す  顧客の成功体験と、失敗経験を踏まえて、提案する 社内資料を獲得できると、本当に刺さる提案への第一歩   取り組みへの共感と、方向性の確認  「他者を追随 or 方向性維持 or 方向転換」への次の一歩について、制約を省きどうしたいか   お土産情報を用意する  顧客にとって有益な情報 また話したいと思う営業マンへ！    失敗しない提案を作成  時期の確認  いつ頃に実現できると理想か？ 内部のマニュアル的に〇月までに合意を取る必要あるか？ 導入にあたり予算獲得時期との兼ね合いも必要のため、スケジュール共同作成等の提案   予算の確認  予算的に無理な提案をしないため、概算でも良いので把握する必要あり 直接的に聞く or 他社サービスの導入例を元に金額感を聞く   検討組織の確認  提案商品サービスによる顧客の課題解決以外にも、導入に至るまでの課題も把握する必要あり  誰が提案承認する？ 名刺交換等の顔合わせだけでも試みる 営業の場への同席を打診     競合接触の確認  顧客は、競合の何に対して魅力を感じているかに着目  どういった点が良いと感じたか 他社のサービスも引き合いに出して判断基準を探る     現在のサービス判断基準と理由の確認  顧客の選定基準に合わせたサービス紹介  直接、選定基準を聞く 曖昧なら、顧客が言語化できていない観点を一緒に探す      スムーズに提案に移行するコツ  他社の事例からサービス紹介  顧客の課題感と近い、他社の成功事例を切り口へ 違う部分もあるため、顧客に合わせてアレンジ   複数の選択肢を提示  基準を明確にして３案ほど用意 費用が安い案、効果が高い案、他社の成功事例の案    クロージング  「すぐに受注に結びつきそう！」  提案を書面化 顧客社内の検討スピードを早める   「担当者レベルでは不安\u0026hellip;」  不安要素を除外する提案 担当者が社内で導入を進めるにあたり、会議の同席や書面作成など営業マンとしてサポート   「予算がなくて\u0026hellip;」  OKラインを探る 「顧客の予算に合わせて提案したいから、予算の3パターン程教えてくれると！」 「一番安いプランから試験的に始めて、データを見てプランを考えるとか！」   「導入は急がない\u0026hellip;」  外部の動きを比較させる 社会変化へ急ぎ対応することとか、競合の動きとか スタートが早いほど、課題解決へのノウハウを蓄積できる   特別対応など社内交渉が必要な時  論点整理と締め切りを確認   相手の本気度を見極める  1: 具体的なスケジュールと予算を検討します！ 2: 決裁者に相談します 3: 関係各所から必要な情報を集めます 4: チーム内に情報共有します 5: 考えておきます    まとめ  大前提は、信頼を獲得すること ステップを作ってトライ 社外のみならず社内でも実践  ","description":"","id":0,"section":"memo","tags":["udemy"],"title":"Udemy: 【初心者向け】2時間でわかる！確実に商談を前進させる営業トーク50選","uri":"https://masayuki-0319.github.io/hugo-my-blog/memo/initial-markething/"},{"content":"概要  参考 URL  現役女子アナ直伝！コミュニケーション研修    聴き方  身体の仕草  ミラーリングにより、親近感を持つ効果 相手のしぐさや行動を模倣する 多すぎると違和感   身体の向き  顔だけ向けると、相手を焦らせる 身体もむけて、相手に関心を持つことを示す   顔は笑顔で  「笑顔」は、第一印象の決め手 トレーニングとして、端を口に水平に加えることにより、笑顔をキープしやすくなる   ジェスチャー  相手に対して、手の平を向ける（敵意のなさを示す） ジェスチャーを戻す際は、戻る場所を固定（印象が良くなる）   目の動き 相手に興味を持つ姿勢  会話 会話の導入  気候、場所、服装など、気軽に答えられる質問から始める アナウンサーの技術として、短い質問をすることで、より答えやすく  何故ですか？ 何があったの？ それでどうなったの？ いつから？ どこで？ 誰が？ どうやって？    類似性の法則  相手と同じことを共有すると、仲良くなる 営業マンは、プライベートの話を使用して、相手との類似点を探る  相槌  相槌のパターンを増やす 相手の話す熱量やスピードにも合わせる  バックトラッキング  相手の言葉を復唱する 重要な要求ポイントを復唱することで、自分の理解を示す  ページング  相手の状況に応じて、合わせる相槌  相手を受け入れる肯定表現  最初から意見を否定すると、意見を潰してしまう 相手の意見を受け入れて、理由を聞く  クレーム対応  部分的な謝罪から開始する  初めの段階では、勘違いの可能性が存在する ご気分を悪くしてしまい、申し訳ございません... お手数おかけして、... ご迷惑おかけして、...   内容を確認する  お願いする形で導入 詳しくお話を聞かせて、いただけませんか？ バックトラッキングも活用   怒りを鎮める  人を変える（自分では対応が難しい場合） 時間を変える（アンガーマネジメントでは6秒過ぎれば、怒りのピークが下がる） 場所を変える（ストレスを感じる場所で話してるかも）    ","description":"","id":1,"section":"memo","tags":["udemy"],"title":"Udemy: 現役女子アナ直伝！コミュニケーション研修","uri":"https://masayuki-0319.github.io/hugo-my-blog/memo/initial-communicate/"},{"content":"Hugo インストール  Install Hugo | Hugo  使いたいテーマを選択 Wordpress のテーマ選択と同じ趣旨。\n気に入ったテーマを探す。\nComplete List | Hugo Themes\n選択テーマの指示通りにプロジェクトを生成 以下のテーマを選択した。\nHugo Clarity | Hugo Themes\n ※ clarity 使用事例  Funky Cloud Medina Neon Mirrors Clarity Themeへ切り替え | らいふろぐ    GitHub Pages により公開  Host on GitHub | Hugo  ロゴ設定 新規作成 温泉マークでは味気ないため、自分用のロゴと置換する。\nShopify なら、適当な属性を選択すると、自動でサジェストしてくれるので、とても楽。\n 参考 URL  ロゴメーカー＆ロゴクリエーター - 無料のオンラインロゴジェネレーター ロゴメーカー | 【商用利用OK】無料で誰でも簡単に自分のショップのロゴが作れる    調整 Clarity の仕様上、上記で作成したロゴを使用すると、ヘッダーが画像の height 分伸びる問題が存在する。\nそのため、Mac なら画像開いた時のマークアップなどで、高さ等を調整する。\nディレクトリ設定 favicon と footer のロゴは、./static/icons/ に次の命名規則で配置すると、設定完了である。\nClarity のデフォルト設定を上書きするイメージ。\nheader のロゴは、./static/icons/ に配置するが、config.toml の設定が必要のため、後述する。\n1 2 3 4 5 6 7 8 9 10  $ tree static static ├── icons │ ├── apple-touch-icon.png │ └── favicon-32x32.png ... └── logos ... ├── logo_transparent_snip.png ...   config.toml に設定 既存のロゴと差し替える。\n1 2 3  [params] - logo = \u0026#34;logos/logo.png\u0026#34; + logo = \u0026#34;logos/logo_transparent_snip.png\u0026#34;   サイト管理者の情報を設定 config.toml で設定可能である。\n以下の key を自分用に設定すると、ある程度の見た目が整う。\n1 2 3 4 5 6 7 8  copyright = \u0026#34;\u0026#34; title = \u0026#34;\u0026#34; author = \u0026#34;\u0026#34; [params] author = \u0026#34;\u0026#34; twitter = \u0026#34;\u0026#34; introDescription = \u0026#34;\u0026#34;   config/_default/languages.toml の title にも、自分のサイト名を記述する。\n[en] title = \u0026quot;${Your Site Title}\u0026quot; LanguageName = \u0026quot;English\u0026quot; weight = 1 ","description":"Hugoインストールから、最低限の見た目を整えるところまで","id":2,"section":"posts","tags":["study","memo"],"title":"Hugo の初期設定","uri":"https://masayuki-0319.github.io/hugo-my-blog/posts/hugo-initial-settings/"},{"content":"概要 Hugo は、以下のコマンドで記事のテンプレートを記事ディレクトリに生成する。\nテンプレートファイルは、./archetypes/post.md に存在するため、好みのテンプレートを作成する。\n1  $ hugo new post/${記事名}.md    参考 URL  Archetypes | Hugo Hugoで新規記事を作成するときのTips的なメモ - Qiita    テンプレート設定 Clarity では、次の設定さえあれば充足する。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  +++ author = \u0026#34;${自分の名前}\u0026#34; date = \u0026#34;YYYY-mm-dd\u0026#34; title = \u0026#34;Use meta title\u0026#34; description = \u0026#34;Use meta description\u0026#34; Summary = \u0026#34;Use index page by article summary\u0026#34; featured = false tags = [ \u0026#34;\u0026#34;, ] categories = [ \u0026#34;\u0026#34;, ] +++ ## 概要  ## 〜〜   ","description":"Hugo では、記事作成時のフォーマットが存在するため、その設定を行う。","id":3,"section":"posts","tags":["study","memo"],"title":"Hugoで記事作成の環境を整える","uri":"https://masayuki-0319.github.io/hugo-my-blog/posts/hugo-settings-before-writting/"},{"content":"概要  参考 URL  今日から始めるデジタルトランスフォーメーション！テクノロジーの仕組みからデータ活用基盤のつくりかたまで | Udemy DXレポート ～ITシステム「2025年の崖」克服とDXの本格的な展開～（METI/経済産業省）    DX の考え方 データとデジタル技術を活用して、既存の製品及びサービスを変革すること。\n まだ、デジタル化されていない、又は最近デジタル化された情報は何か？  既にデータ化されている場合は、やり尽くされているかも   その情報をデータ化すると、どんなことが起きるか？  ユーザに何を提供できるか 自社にどんな価値が生まれるか    DX が目指す Society5.0 経済発展と、社会課題の解決を図る。\n 参考 URL  デジタル経営改革のための評価指標（「DX推進指標」）を取りまとめました （METI/経済産業省） Society 5.0 - 科学技術政策 - 内閣府 DX Criteriaとは - DX Criteria v201912- 「２つのDX」とデジタル経営のガイドライン    DX を支える技術  4つの DX をもって DX が初めて推進される  IT 基盤の DX 業務オペレーションの DX 顧客視点の DX 人材・文化の DX    IT 基盤の DX  クラウド技術  gradescope knewton volley atama+ qubena   カンのデジタル化  人の経験により判断が行われていることは何か それを ML でデジタル化するため、どのようなインプットデータが必要か 必要なインプットデータのうち、まだデジタル化されていない情報は何か データを収集するため、どのような仕組みが必要か   BI 導入の可能性  定常的に出力しているレポートはあるか レポートがリアルタイム参照可能になると、どのようなメリットがあるか    業務オペレーションの DX  iPaaS  システム間における統合フローの開発、実行、管理 レガシーシステム、新システムの統合を目指す   RPA  システム操作の自動化 レガシーシステムでも対応可能へ    顧客視点の DX   オムニチャネル\n 顧客の行動履歴を蓄積 店舗及び Web ページにおける蓄積データの統合    Data Management Platform 間の連携\n データの収集、統合、管理に強み プライベート DMB ( 自社 Web サイト、自社店舗、CRM ) パブリック DMP ( 連携会社 )    Marketing Automation\n チャネルの自動操作する強み 「クライアント」と「サーバ」の間に入り、パーソナライズされた情報を出し分け クライアントをセグメントに分割して、出し分け    参考 URL\n ユーザー分析DMP Juicer｜ユーザー分析やA/Bテスト、NPSが無料で    ","description":"","id":4,"section":"memo","tags":["study","memo","udemy"],"title":"Udemy: 今日から始めるデジタルトランスフォーメーション！テクノロジーの仕組みからデータ活用基盤の作り方まで","uri":"https://masayuki-0319.github.io/hugo-my-blog/memo/initial_lerning_degital_transformation/"},{"content":"概要 下記 Udemy のコースを元に学習した。\njavascript に知見がある場合、言語仕様を飛ばしつつ、短時間で GAS の仕組みを概観できる。\nプログラミング未経験者でも、言語の書き方から丁寧に説明されているため、不安なく受講できるかと考える。\nGSuite 導入企業の事務担当者に受講させると、とても効果的かも。\n 参考 URL  【業務自動化をゼロからマスター】Google Apps Scriptの仕事効率化・自動化をプログラミングで実現 | Udemy Apps Script | Google Developers Google Apps Script でよく使うスニペット集 30 選 - Qiita    Google Apps Script を使用した業務の自動化 Google Form 送信時における自動メール通知  Google Drive から、Google Form を生成 適当に入力フォームを追加 回答タブから、回答をスプレッドシートに表示 を押下 ツールタブから、スクリプトエディタを起動 ヘッダー中段の時計アイコンである現在のプロジェクトのトリガーを押下 FloatingActionButton を押下し、トリガーを生成 エディタで、フォーム送信時に発火するトリガーを元に起動する function を定義 フォームで、右上のプレビュー機能を使用して、フォームを送信 入力したメールアドレスに以下の文面が届いたら成功  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  // https://developers.google.com/apps-script/reference/gmail function autoReply(event) { const [timeStamp, companyName, name, email] = event.values; const subject = `『${name}様』 お問い合わせありがとうございます`; const body = ` お名前 ${name}様 お問い合わせありがとうございます 以下の内容で、お問い合わせを承りました。 会社名: ${companyName}お名前： ${name}メールアドレス: ${email}`; GmailApp.sendEmail(email, subject, body); }   Google Form 送信時における Slack 自動通知  自分用の workspace を用意 通知したい channel を用意 Setting and Adnimistrationから、Manage App を押下して、Webページへ Incoming Webhook を探し、対象の workspace に導入すると、設定画面に移動 Webhook 用の URL をコピーしておき、下部で設定を保存する 以下の通りコードを用意  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46  // https://developers.google.com/apps-script/reference/gmail  function autoReply(event) { const [timeStamp, companyName, name, email] = event.values; const subject = `『${name}様』 お問い合わせありがとうございます`; const body = ` お名前 ${name}様 お問い合わせありがとうございます 以下の内容で、お問い合わせを承りました。 会社名: ${companyName}お名前： ${name}メールアドレス: ${email}`; const slackMessage = ` お名前 ${name}様 以下の内容で、お問い合わせを承りました。 会社名: ${companyName}お名前： ${name}メールアドレス: ${email}`; GmailApp.sendEmail(email, subject, body); notifySlack(slackMessage); } function notifySlack(message) { const WEBHOOK_URL = `${slack の web ページでコピーした URL}`; const userName = \u0026#34;gasBot\u0026#34;; const payloadObj = { username: userName, text: message }; const payloadJson = JSON.stringify(payloadObj); const options = { method: \u0026#34;post\u0026#34;, contentType: \u0026#34;application/json\u0026#34;, payload: payloadJson, }; UrlFetchApp.fetch(WEBHOOK_URL, options); }   顧客リストを元に一斉メール送信 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  //https://developers.google.com/apps-script/reference/gmail/gmail-app#sendEmail(String,String,String,Object)  function sendAll() { const ss = SpreadsheetApp.getActiveSheet(); const range = ss.getDataRange().getValues(); const file = DriveApp.getFilesByName(\u0026#34;Google Driveのマイドライブに存在するファイル名\u0026#34;).next(); for(var i = 1; i \u0026lt; range.length; i++){ var title = `【${range[i][2]}様】新商品のお知らせです`; var body = ` ${range[i][1]}${range[i][2]}様 新商品のお知らせです。 `; var email = range[i][3]; var cc = range[i][4]; var options = { attachments: [file], cc: cc }; GmailApp.sendEmail(email, title, body, options); } }   ","description":"Udemy で GoogleAppsScript に触れてみた。","id":5,"section":"memo","tags":["study","memo","udemy"],"title":"Udemy:【業務自動化をゼロからマスター】Google Apps Scriptの仕事効率化・自動化をプログラミングで実現","uri":"https://masayuki-0319.github.io/hugo-my-blog/memo/study-google-apps-script/"}]